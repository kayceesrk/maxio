#!/bin/bash

if [ -z "$1" ] || [ -z "$2" ]
  then
    echo "Usage: $0 <input_file.lines> <ouput.pdf>"
    exit 1
fi

PWD=`dirname "$0"`
BASE=`basename $1 .lines`
WIDTH=`pdfinfo ${BASE}.pdf | grep "Page size:" | awk '{printf "%.0f\n", $3}'`
HEIGHT=`pdfinfo ${BASE}.pdf | grep "Page size:" | awk '{printf "%.0f\n", $5}'`
OUTPUT=$2

function scale_width {
	NEW_WIDTH=`echo "${HEIGHT} * 0.75" | bc | sed "s/\..*//g"`
	#Origin is at left bottom
	OFFSET=`echo "(${WIDTH} - ${NEW_WIDTH}) / 2.0" | bc | sed "s/\..*//g"`

    create_annotated_pdf ${NEW_WIDTH} ${HEIGHT}

	pdfjam --papersize "{${NEW_WIDTH}pt,${HEIGHT}pt}" --offset "${OFFSET}pt 0pt" --outfile ${BASE}_resized.pdf ${BASE}.pdf
}

function scale_height {
	NEW_HEIGHT=`echo "${WIDTH} * 1.3333" | bc | sed "s/\..*//g"`
	#Origin is at left bottom
	OFFSET=`echo "(${NEW_HEIGHT} - ${HEIGHT}) / 2.0" | bc | sed "s/\..*//g"`

    create_annotated_pdf ${WIDTH} ${NEW_HEIGHT}

	pdfjam --papersize "{${WIDTH}pt,${NEW_HEIGHT}pt}" --offset "0pt ${OFFSET}pt" --outfile ${BASE}_resized.pdf ${BASE}.pdf
}

function create_annotated_pdf {
    WIDTH=$1
    HEIGHT=$2

	$PWD/rM2svg -i ${BASE}.lines -o ${BASE}.svg
	for i in `ls ${BASE}_*.svg`
	do
		rsvg-convert -w ${WIDTH} -h ${HEIGHT} -f pdf -o `sed "s/svg/pdf/g" <<< "$i"` `pwd`/$i
	done

	PDF_FILES=`ls ${BASE}_*.pdf | sort -V`
	pdftk ${PDF_FILES} cat output ${BASE}_annotations.pdf
	rm ${PDF_FILES}
	rm `ls ${BASE}_*.svg`
}

#0.75 is the ratio of rM tablet width to height
R=`echo "${WIDTH}.0 / ${HEIGHT} < 0.75" | bc -l`
if [[ ${R} == 1 ]]; then
	scale_width
else
	scale_height
fi

pdftk ${BASE}_resized.pdf multistamp ${BASE}_annotations.pdf output ${OUTPUT}
rm ${BASE}_resized.pdf ${BASE}_annotations.pdf
